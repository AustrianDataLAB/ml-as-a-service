apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ml-as-a-service.fullname" . }}-azurite-secret
  labels:
  {{- include "ml-as-a-service.labels" . | nindent 4 }}
data:
  CONNECTION_STRING: {{ required "persistence.azuriteSecret.connectionString is required" .Values.persistence.azuriteSecret.connectionString
    | b64enc | quote }}
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ml-as-a-service.fullname" . }}-persistence-service
  labels:
  {{- include "ml-as-a-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.persistence.persistenceService.replicas }}
  selector:
    matchLabels:
      app: persistence-service
    {{- include "ml-as-a-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: persistence-service
      {{- include "ml-as-a-service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              key: CONNECTION_STRING
              name: {{ include "ml-as-a-service.fullname" . }}-azurite-secret
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.persistence.kubernetesClusterDomain }}
        image: {{ .Values.persistence.persistenceService.image.repository }}:{{
          .Values.persistence.persistenceService.image.tag | default .Chart.AppVersion}}
        imagePullPolicy: {{ .Values.persistence.persistenceService.imagePullPolicy
          }}
        name: persistence-service
        ports:
        - containerPort: 5000
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ml-as-a-service.fullname" . }}-persistence-service
  labels:
  {{- include "ml-as-a-service.labels" . | nindent 4 }}
spec:
  type: {{ .Values.persistence.persistenceService.type }}
  selector:
    app: persistence-service
  {{- include "ml-as-a-service.selectorLabels" . | nindent 4 }}
  ports:
    - name: api
      port: {{ .Values.persistence.persistenceService.ports.api }}
      protocol: TCP
      targetPort: 5000