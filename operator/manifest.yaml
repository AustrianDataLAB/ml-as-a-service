apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-creator-service-account

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-creator-role
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "get", "list", "delete"]  # Include other verbs as needed

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-creator-role-binding
subjects:
- kind: ServiceAccount
  name: job-creator-service-account
roleRef:
  kind: Role
  name: job-creator-role
  apiGroup: rbac.authorization.k8s.io


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-service
  template:
    metadata:
      labels:
        app: flask-service
    spec:
      serviceAccountName: job-creator-service-account  # Assign the ServiceAccount to the Pod
      containers:
        - name: flask-service
          image: flask-service
          imagePullPolicy: IfNotPresent   # Specify the image pull policy here
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: flask-service
